(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{434:function(t,e,a){"use strict";a.r(e);var s=a(35),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"join-a-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-a-network"}},[t._v("#")]),t._v(" Join a network")]),t._v(" "),a("p",[t._v("It is highly recommended that you set up a private local network before joining a public network.\nThis will help you get familiar with the setup process, and provide an environment for testing.\nThe following sections outline this process.\nIf you want to join a public network without setting up a private network,\nyou can skip to "),a("a",{attrs:{href:"#join-a-public-network"}},[t._v("join a public network ")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"set-up-a-local-private-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-up-a-local-private-network"}},[t._v("#")]),t._v(" Set up a local private network")]),t._v(" "),a("p",[t._v("Validators can set up a private MetaOS network to become familiar with running a full MetaOS node before joining a public network.")]),t._v(" "),a("h3",{attrs:{id:"create-a-single-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-single-node"}},[t._v("#")]),t._v(" Create a single node")]),t._v(" "),a("p",[t._v("The simplest MetaOS network you can set up is a local testnet with just a single node. In a single-node environment, you have one account and are the only validator signing blocks for your private network.")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Initialize your genesis file that will bootstrap the network. Replace the following variables with your own information:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("metaosd init --chain-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("testnet-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("node-moniker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Generate a MetaOS account. Replace the variable with your account name:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("metaosd keys "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("account-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"get-tokens"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-tokens"}},[t._v("#")]),t._v(" Get tokens")]),t._v(" "),a("p",[a("strong",[t._v("Tip")]),t._v(":")]),t._v(" "),a("p",[t._v("In order for "),a("code",[t._v("metaosd")]),t._v(" to recognize a wallet address, it must contain tokens.\nFor the testnet, use "),a("a",{attrs:{href:"https://faucet.metaos.im/",target:"_blank",rel:"noopener noreferrer"}},[t._v("the faucet"),a("OutboundLink")],1),t._v(" to send MTOS to your wallet.\nIf you are on mainnet, send funds from an existing wallet. 1-3 MTOS are sufficient for most setup processes.")])]),t._v(" "),a("h3",{attrs:{id:"add-your-account-to-the-genesis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-your-account-to-the-genesis"}},[t._v("#")]),t._v(" Add your account to the genesis")]),t._v(" "),a("p",[t._v("Run the following commands to add your account and set the initial balance:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("metaosd add-genesis-account "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("metaosd keys show "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("account-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -a"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" 100000000umtos\nmetaosd gentx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my-account"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 10000000umtos --chain-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("testnet-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nmetaosd collect-gentxs\n")])])]),a("h3",{attrs:{id:"start-your-private-metaos-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-your-private-metaos-network"}},[t._v("#")]),t._v(" Start your private MetaOS network")]),t._v(" "),a("p",[t._v("Run the following command to start your private network:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("metaosd start\n")])])]),a("p",[t._v("If the private MetaOS network is set up correctly, your "),a("code",[t._v("metaosd")]),t._v(" node will be running on "),a("code",[t._v("tcp://localhost:26656")]),t._v(", listening for incoming transactions, and signing blocks.")]),t._v(" "),a("h2",{attrs:{id:"join-a-public-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-a-public-network"}},[t._v("#")]),t._v(" Join a public network")]),t._v(" "),a("p",[t._v("These instructions are for setting up a brand new full node from scratch. You can join a public MetaOS network, such as the mainnet or testnet, by completing the following steps:")]),t._v(" "),a("h3",{attrs:{id:"_1-select-a-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-select-a-network"}},[t._v("#")]),t._v(" 1. Select a network")]),t._v(" "),a("p",[t._v("Specify the network you want to join by choosing the corresponding "),a("strong",[t._v("genesis file")]),t._v(" and "),a("strong",[t._v("seeds")]),t._v(":")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Network")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Genesis")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Addressbook")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Seeds")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("main-1")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Mainnet")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("test-1")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Testnet")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[not available yet]")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-download-genesis-file-and-address-book"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-download-genesis-file-and-address-book"}},[t._v("#")]),t._v(" 2. Download genesis file and address book")]),t._v(" "),a("p",[a("strong",[t._v("Genesis-transaction")]),t._v(" specifies the account balances and parameters at the start of the network to use when replaying transactions and syncing.")]),t._v(" "),a("p",[a("strong",[t._v("Addressbook")]),t._v(" lists a selection of peers for your node to dial to in order to discover other nodes in the network. Public address books of peers are made available by the MetaOS community.")]),t._v(" "),a("p",[t._v("Choose a "),a("code",[t._v("testnet")]),t._v(" or "),a("code",[t._v("mainnet")]),t._v(" address type and download the appropriate genesis-transaction and address-book. Links to these are posted in "),a("a",{attrs:{href:"#1-select-a-network"}},[t._v("Select-a-network")]),t._v(".")]),t._v(" "),a("ul",[a("li",[t._v("For default "),a("code",[t._v("metaosd")]),t._v(" configurations, the "),a("code",[t._v("genesis")]),t._v(" and "),a("code",[t._v("addressbook")]),t._v(" files should be placed under "),a("code",[t._v("~/.metaos/config/genesis.json")]),t._v(" and "),a("code",[t._v("~/.metaos/config/addrbook.json")]),t._v(" respectively.")])]),t._v(" "),a("p",[t._v("Continue to the "),a("RouterLink",{attrs:{to:"/en/for_validator/run_node/sync.html"}},[t._v("Sync")]),t._v(" page to find out more about syncing your node.")],1)])}),[],!1,null,null,null);e.default=o.exports}}]);