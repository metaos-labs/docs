(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{429:function(e,t,s){"use strict";s.r(t);var a=s(35),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"additional-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#additional-settings"}},[e._v("#")]),e._v(" Additional Settings")]),e._v(" "),s("blockquote",[s("h3",{attrs:{id:"tip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tip"}},[e._v("#")]),e._v(" Tip:")]),e._v(" "),s("p",[e._v("For more information on seeds and peers, visit the "),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/docs/tendermint-core/using-tendermint.md#peers",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint documentation"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("You can also find more useful information from "),s("a",{attrs:{href:"https://docs.tendermint.com/master/nodes/configuration.html#p2p-settings",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1),e._v(".")])]),e._v(" "),s("h3",{attrs:{id:"seed-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seed-mode"}},[e._v("#")]),e._v(" seed_mode")]),e._v(" "),s("p",[e._v("In seed mode, your node constantly crawls the network and looks for peers.\nIf another node requests addresses, it responds and disconnects.\nSeed mode will not work if the peer-exchange reactor is disabled.")]),e._v(" "),s("p",[e._v("Edit the following settings in "),s("code",[e._v("config.toml")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("seed_mode")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("pex")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),s("h3",{attrs:{id:"seeds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seeds"}},[e._v("#")]),e._v(" seeds")]),e._v(" "),s("p",[e._v("To manually identify seed nodes, edit the following setting in "),s("code",[e._v("config.toml")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Comma separated list of seed nodes to connect to")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("seeds")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id100000000000000000000000000000000@1.2.3.4:26656,id200000000000000000000000000000000@2.3.4.5:4444"')]),e._v("\n")])])]),s("h3",{attrs:{id:"persistent-peers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#persistent-peers"}},[e._v("#")]),e._v(" persistent_peers")]),e._v(" "),s("p",[e._v("The nodes you specify are the trusted persistent peers that can help anchor your node in the p2p network.\nIf the connection fails, they are dialed and automatically redialed for 24 hours.\nThe automatic redial functionality uses exponential backoff and stops after 24 hours of trying to connect.")]),e._v(" "),s("p",[e._v("If the value of "),s("code",[e._v("persistent_peers_max_dial_period")]),e._v(" is more than zero, the pause between each call to each persistent peer will not exceed "),s("code",[e._v("persistent_peers_max_dial_period")]),e._v(" during exponential backoff, and the automatic redial process continues.")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Comma-separated list of nodeid@ip:port values that define a list of peers that are expected to be online at all times ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# and the node is expected to be able to connect to them. ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This is necessary at first startup so the node  has a few other nodes to connect to. ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# It is not as crucial when the peer exchange reactor already filled a list of nodes that are available. ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# If some nodes are not available, they will be skipped and later retried for a while before completely dropping them. ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# If no nodes are available from this list and pex=false, then the node will not be able to join the network.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("persistent_peers")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id100000000000000000000000000000000@1.2.3.4:26656,id200000000000000000000000000000000@2.3.4.5:26656"')]),e._v("\n")])])]),s("h3",{attrs:{id:"private-peer-ids"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#private-peer-ids"}},[e._v("#")]),e._v(" private_peer_ids")]),e._v(" "),s("p",[e._v("This setting tells which nodes should not be handed out to others, when "),s("code",[e._v("pex")]),e._v("=true.\nIf "),s("code",[e._v("pex")]),e._v("=false, this setting can be "),s("code",[e._v("omitted")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Comma-separate list of nodeid values, that should not be gossiped at all times.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("private_peer_ids")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id100000000000000000000000000000000,id200000000000000000000000000000000"')]),e._v("\n")])])]),s("blockquote",[s("p",[s("strong",[e._v("Tip")]),e._v("ï¼šUse this command to query tendermint node id:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("metaosd tendermint show-node-id\n")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);