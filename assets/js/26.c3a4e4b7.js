(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{441:function(a,t,e){"use strict";e.r(t);var s=e(35),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"register-a-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#register-a-validator"}},[a._v("#")]),a._v(" Register a validator")]),a._v(" "),e("p",[a._v("This is a detailed step-by-step guide for setting up a MetaOS validator. Please be aware that while it is easy to set up a rudimentary validating node, running a production-quality validator node with a robust architecture and security features requires an extensive setup.")]),a._v(" "),e("h2",{attrs:{id:"_1-retrieve-your-pubkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-retrieve-your-pubkey"}},[a._v("#")]),a._v(" 1. Retrieve your PubKey")]),a._v(" "),e("p",[a._v("The Consensus PubKey of your node is required to create a new validator. Run:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("metaosd tendermint show-validator\n")])])]),e("h2",{attrs:{id:"_2-create-a-new-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-create-a-new-validator"}},[a._v("#")]),a._v(" 2. Create a new validator")]),a._v(" "),e("blockquote",[e("h3",{attrs:{id:"get-tokens"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-tokens"}},[a._v("#")]),a._v(" Get tokens")]),a._v(" "),e("p",[e("strong",[a._v("Tip")]),a._v(":")]),a._v(" "),e("p",[a._v("In order for MetaOSd to recognize a wallet address it must contain tokens. For the testnet, use "),e("a",{attrs:{href:"https://faucet.metaos.im/",target:"_blank",rel:"noopener noreferrer"}},[a._v("the faucet"),e("OutboundLink")],1),a._v(" to send MTOS to your wallet. If you are on mainnet, send funds from an existing wallet. 1-3 MTOS are sufficient for most setup processes.")])]),a._v(" "),e("p",[a._v("To create the validator and initialize it with a self-delegation, run the following command. "),e("code",[a._v("key-name")]),a._v(" is the name of the Application Operator Key that is used to sign transactions.")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("metaosd tx staking create-validator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --amount"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1000000000000000000000000umtos "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --pubkey"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-consensus-PubKey"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --moniker"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<your-moniker>"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --chain-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("chain_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --from"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --commission-rate"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.10"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --commission-max-rate"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.20"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --commission-max-change-rate"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.01"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --min-self-delegation"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --gas"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --gas-adjustment"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.2"')]),a._v("\n")])])]),e("blockquote",[e("h3",{attrs:{id:"warning"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#warning"}},[a._v("#")]),a._v(" Warning")]),a._v(" "),e("p",[a._v("When you specify commission parameters, the "),e("code",[a._v("commission-max-change-rate")]),a._v(" is measured as a percentage-point change of the "),e("code",[a._v("commission-rate")]),a._v(". For example, a change from 1% to 2% is a 100% rate increase, but the "),e("code",[a._v("commission-max-change-rate")]),a._v(" is measured as 1%.")])]),a._v(" "),e("h2",{attrs:{id:"_3-confirm-your-validator-is-active"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-confirm-your-validator-is-active"}},[a._v("#")]),a._v(" 3. Confirm your validator is active")]),a._v(" "),e("p",[a._v("If running the following command returns something, your validator is active:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("metaosd query tendermint-validator-set "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("metaosd tendermint show-address"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n")])])]),e("p",[a._v("You are looking for the "),e("code",[a._v("bech32")]),a._v(" encoded "),e("code",[a._v("address")]),a._v(" in the "),e("code",[a._v("~/.metaos/config/priv_validator_key.json")]),a._v(" file.")]),a._v(" "),e("blockquote",[e("h4",{attrs:{id:"note"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#note"}},[a._v("#")]),a._v(" Note")]),a._v(" "),e("p",[a._v("Only the top 21 validators in voting power are included in the active validator set.")])]),a._v(" "),e("h2",{attrs:{id:"_4-secure-your-keys-and-have-a-backup-plan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-secure-your-keys-and-have-a-backup-plan"}},[a._v("#")]),a._v(" 4. Secure your keys and have a backup plan")]),a._v(" "),e("p",[a._v("Protecting and having a contingency backup plan for your keys will help mitigate catastrophic hardware or software failures of the node.\nIt is a good practice to test your backup plan on a testnet node in case of node failure.")]),a._v(" "),e("h2",{attrs:{id:"_5-suggestions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-suggestions"}},[a._v("#")]),a._v(" 5. Suggestions")]),a._v(" "),e("p",[a._v("If you become a validator, and you want to make yourself known to potential delegators. Consider the following options to help improve your visibility.")]),a._v(" "),e("h3",{attrs:{id:"set-up-a-website"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-up-a-website"}},[a._v("#")]),a._v(" Set up a website")]),a._v(" "),e("p",[a._v("Set up a website so that your delegators can find you. It is recommended that you make a custom section for MetaOS delegators that instructs them how to "),e("RouterLink",{attrs:{to:"/en/for_validator/run_validator/delegate-to-a-validator.html"}},[a._v("delegate")]),a._v(" "),e("code",[a._v("MTOS")]),a._v(" tokens.")],1),a._v(" "),e("h3",{attrs:{id:"announce-yourself-on-social-software"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#announce-yourself-on-social-software"}},[a._v("#")]),a._v(" Announce yourself on social software")]),a._v(" "),e("p",[a._v("Introduce yourself on the social software you are using. In the future, MetaOS will have its own official social mode to be public.")])])}),[],!1,null,null,null);t.default=r.exports}}]);