(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{438:function(e,t,a){"use strict";a.r(t);var s=a(35),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updates"}},[e._v("#")]),e._v(" Updates")]),e._v(" "),a("h2",{attrs:{id:"upgrade-the-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-the-testnet"}},[e._v("#")]),e._v(" Upgrade the testnet")]),e._v(" "),a("p",[e._v("These instructions are for full nodes running older testnets that would like to upgrade to the latest testnet.")]),e._v(" "),a("h3",{attrs:{id:"_1-reset-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-reset-data"}},[e._v("#")]),e._v(" 1. Reset data")]),e._v(" "),a("p",[e._v("Remove the outdated files and reset the data:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" ~/.metaos/config/genesis.json\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" ~/.metaos/config/addrbook.json\nmetaosd unsafe-reset-all\n")])])]),a("p",[e._v("Your node is now in a pristine state, keeping the original "),a("code",[e._v("priv_validator_key.json")]),e._v(" and "),a("code",[e._v("config.toml")]),e._v(". If you had any sentry nodes or full nodes set up before, your node will still try to connect to them but may fail if they haven't also been upgraded.")]),e._v(" "),a("blockquote",[a("h3",{attrs:{id:"danger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#danger"}},[e._v("#")]),e._v(" DANGER!")]),e._v(" "),a("p",[e._v("Make sure that every node has a unique "),a("code",[e._v("priv_validator_key.json")]),e._v(".\nDo not copy the "),a("code",[e._v("priv_validator_key.json")]),e._v(" from an old node to multiple new nodes.\nRunning two nodes with the same "),a("code",[e._v("priv_validator_key.json")]),e._v(" will cause you to double sign.")])]),e._v(" "),a("h3",{attrs:{id:"_2-software-upgrade"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-software-upgrade"}},[e._v("#")]),e._v(" 2. Software upgrade")]),e._v(" "),a("p",[e._v("Now it is time to upgrade the software. Go to the project directory and run:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout main "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" build\n")])])]),a("p",[e._v("New "),a("code",[e._v("metaosd")]),e._v(" binary file will be created into "),a("code",[e._v("./build/")]),e._v(" folder. Use the new "),a("code",[e._v("metaosd")]),e._v(" to instead of the old one.")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Tip")]),e._v(":")]),e._v(" "),a("p",[e._v("If you have issues at this step, please check that you have a compatible version of GO installed (v1.18+).")])]),e._v(" "),a("p",[e._v("The previous command uses "),a("code",[e._v("main")]),e._v(" as it contains the latest stable release.")]),e._v(" "),a("p",[e._v("Your full node is now cleanly upgraded!")])])}),[],!1,null,null,null);t.default=o.exports}}]);